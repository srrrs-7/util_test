services:
  surreal:
    image: surrealdb/surrealdb:latest
    ports:
      - "8000:8000"
    environment:
      SURREALDB_USER: root
      SURREALDB_PASS: root
    restart: always
    command: start --log trace --auth --user root --pass root
  surql:
    build:
      dockerfile: ./.images/surql.Dockerfile
    environment:
      SURREALDB_USER: root
      SURREALDB_PASS: root
      SURREALDB_ENDPOINT: http://surreal:8000
    volumes:
      - ./surrealdb:/surrealdb

  mysql:
    build:
      dockerfile: ./.images/mysql.Dockerfile
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test
    restart: always
    volumes:
      - ./mysql/init/init.sql:/mysql/init/init.sql

  postgres:
    build:
      dockerfile: ./.images/pg.Dockerfile
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test
    restart: always
    volumes:
      - ./postgres/init/init.sql:/postgres/init/init.sql

  rds:
    image: redis:latest
    ports:
      - 6370:6370

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ./mongo/data:/data/db
      - ./mongo/init:/mongo/init

  gopher:
    image: golang:1.22.0
    working_dir: /go/src
    volumes:
      - ./go/src:/go/src

  rust:
    image: rust:latest
    platform: linux/arm64
    working_dir: /rust
    volumes:
      - ./rust:/rust

  node:
    image: node:latest
    working_dir: /node
    volumes:
      - ./node:/node

  deno:
    build:
      dockerfile: ./.images/deno.Dockerfile
    working_dir: /deno
    volumes:
      - ./deno:/deno
    ports:
      - 4507:4507
    command: sh -c "cd deno-svelte && deno task build && deno task serve"

  bun:
    build:
      dockerfile: ./.images/bun.Dockerfile
    ports:
      - 3000:3000

  php:
    image: php:latest
    working_dir: /php
    volumes:
      - ./php:/php

  linux:
    image: ubuntu:latest

  k6:
    image: grafana/k6
    volumes:
      - ./k6:/k6

  plantuml:
    image: plantuml/plantuml-server
    ports:
      - 8080:8080

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./observer/prometheus/config.yml:/etc/prometheus/prometheus.yml
      - ./observer/prometheus/data:/prometheus

  grafana:
    image: grafana/grafana-enterprise
    ports:
      - 3011:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./observer/grafana/data:/var/lib/grafana

  loki: # collect logs
    image: grafana/loki:latest
    ports:
      - 3100:3100

  tempo: # collect trace
    image: grafana/tempo:latest
    ports:
      - 3200:3200
    environment:
      - TEMPO_STORAGE_TYPE=local # local file storage
    volumes:
      - ./observer/tempo/config.yml:/etc/tempo.yml

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    ports:
      - 4317:4317 # otlp/gRPC
      - 4318:4318 # otlp/http
      - 14268:14268 # Jaeger Thrift receiver
      - 55681:55681 # otlp/http
    volumes:
      - ./observer/otel-collector/config.yaml:/etc/otel/config.yaml
    command: ["--config=/etc/otel/config.yaml"]

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686" # Jaeger UI
      - "14250:14250" # Jaeger Agent

  vector:
    image: timberio/vector:latest-alpine
    ports:
      - 5044:5044 # Expose Vector's log input port
      - 8664:8664 # Expose Vector's internal metrics
      - 8686:8686 # browser
    volumes:
      - ./observer/vector/config.yaml:/etc/vector/vector.yaml
